Supported Instructions

6XNN - Set VX to NN 
7XNN - Add NN to VX 
ANNN - Set I to NNN 
CXNN - Get random number, Binary AND it with NN and store that in VX

00E0 - Clear Screen
DXYN - Draw N Pixels tall sprite from I at Horizontal X coord in VX, and Vertical Y coord at VY
FX29 - Set I to address of Char Index in VX 

1NNN - Set PC to NNN 
00EE - Return to and pop Stack[SP]
2NNN - Push PC to Stack[SP] and Set PC to NNN 
BNNN - Set PC to V0 + NNN

3XNN - Increment PC x2 if VX == NN 
4XNN - Increment PC x2 if VX != NN 
5XY0 - Increment PC x2 if VX == VY 
9XY0 - Increment PC x2 if VX != VY

8XY0 - Set VX to value of VY
8XY1 - Set VX to Binary OR of VX and VY 
8XY2 - Set VX to Binary AND of VX and VY 
8XY3 - Set VX to Logical XOR of VX and VY 
8XY4 - Set VX to value of VX + value of VY 
8XY5 - Set VX to value of VX - value of VY 
8XY7 - Set VX to value of VY - value of VX 
8XY6 - Put value of VY into VX and bitshift 1 to the right 
8XYE - Put value of VY into VX and bitshift 1 to the left

EX9E - Increment PC x2 if key in VX is pressed
EXA1 - Increment PC x2 if key in VX is not pressed

FX07 - Set VX to value of Delay Timer
FX15 - Set Delay timer to value in VX
FX18 - Set Sound timer to value in VX
FX1E - Add value of VX to I
FX0A - Blocking Get Key, store key pressed in VX
FX33 - Take number in VX, convert it to 3 Decimal Digits, and store it in RAM at Address in I
FX55 - Push All Registers to RAM at value of I
FX65 - Pop All Registers to RAM from value of I


CUSTOM
DXF0 - Delay for value in VX seconds